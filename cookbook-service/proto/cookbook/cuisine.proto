/*
	Copyright 2024 HeavenZhi. All rights reserved.
	Use of this source code is governed by a MIT style
	license that can be found in the LICENSE file.
*/

// 指定的当前 proto 语法版本，有 proto2 和 proto3 之分，不填默认为 proto2
syntax="proto3";

// option go_package = "Go文件存放路径;Go文件所属的包名";
//  Go文件存放路径表示：生成的 Go 文件的存放地址，会自动生成目录
//  Go文件所属的包名表示：生成的 Go 文件所属的包名（若不配置，默认使用 path 的最后路径作为包名）
option go_package="github.com/HeavenZhi/what-eat/cookbook-service/api;pb";

// 指定 proto 文件的命名空间，一个 proto 文件就是一个 package，用于防止 message 重名
// 同时在 import 其他 proto 文件时，需要使用其内部定义 package 名，通过 package_name.message 来调用其定义的 message
package pb;

// 导入其他 proto 文件，需从项目根目录导入，方便后续使用 protoc 编译时直接 -I 项目根目录
import "google/protobuf/empty.proto";// protobuf 自带，配置好了 protobuf 之后直接引用就行
import "common-service/pkg/proto/google/api/annotations.proto";

/*--------------------------------------------------------------Cuisine Request--------------------------------------------------------------*/

//菜系的请求体
message CuisineRequest{
    //菜系分类的 sid
	string sid=1;
    //菜系名称
	string name=2;
	//菜系描述
	string description=3;
}

//根据菜系的 sid 查找菜系的请求体
message CuisineBySidRequest{
    //菜系分类的 sid
	string sid=1;
}

/*--------------------------------------------------------------Cuisine Response--------------------------------------------------------------*/

//布尔响应体
message BooleanResponse{
    bool boolean=1;
}

//获取菜系的响应体
message GetCuisineResponse{
    //菜系分类的 sid
	string sid=1;
    //菜系名称
	string name=2;
	//菜系描述
	string description=3;
}

//批量获取菜系列表的响应体
message FindCuisineListResponse{
    //可重复字段，以此到达 List 的效果，菜系列表
    repeated GetCuisineResponse cuisine_list=1;
}

// CuisineServer 服务
service Cuisine{

	//新增菜系
	rpc InsertCuisine(CuisineRequest) returns(BooleanResponse){
		option (google.api.http) = {
			post: "/Cuisine"
			body: "*"
		};
	};
	//删除菜系
	rpc DeleteCuisine(CuisineBySidRequest) returns(BooleanResponse){
		option (google.api.http) = {
			delete: "/Cuisine/{sid}"
		};
	};
	//修改菜系
	rpc UpdateCuisine(CuisineRequest) returns(BooleanResponse){
		option (google.api.http) = {
			put: "/Cuisine"
			body: "*"
		};
	};
	//根据菜系表的 sid 获取菜系
	rpc GetCuisineBySid(CuisineBySidRequest) returns(GetCuisineResponse){
		option (google.api.http) = {
			get: "/Cuisine/{sid}"
		};
	};
	//批量获取菜系列表
	rpc FindCuisineList(google.protobuf.Empty) returns(FindCuisineListResponse){
		option (google.api.http) = {
			get: "/CuisineList"
		};
	};
}