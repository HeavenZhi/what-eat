# .github/workflows/your-file-name.yml

# 自定义的 Github Workflow 名
name: My push mirror Git Repository

# 自定义 Github Workflow 的触发条件
on: [ push, delete, create ]

jobs:
  # 自定义的 job 名
  call-push-mirror-git-repository:

    # --------------------------------------在此以上的代码可以根据需求任意更改--------------------------------------
    # -----------------------------在此之下的代码为：调用该 GitHub Workflow 的核心步骤（不能更改）-----------------------------

    uses: HeavenZhi/reusable-workflow/.github/workflows/push-mirror-git-repository.yml@main
    secrets:
      ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
    with:
      source_repo: ${{ vars.SOURCE_REPO }}
      destination_repo: ${{ vars.DESTINATION_REPO }}

    # -----------------------------在此之上的代码为：调用该 GitHub Workflow 的核心步骤（不能更改）-----------------------------
    # --------------------------------------在此以下的代码可以根据需求任意更改--------------------------------------

    # -----------------------------------------------------可选参数---------------------------------------------------------------
      # is_clone_bare 为 boolean 类型的可选参数（可不设置），不设置时默认为：false（即使用 git clone --mirror 的方式，从源 Git 仓库克隆镜像）
      # 该参数决定是否使用 git clone --bare 的方式，从源 Git 仓库克隆镜像
      # 若在代码托管平台的源 Git 仓库中包含 Pull Requests，且目标 Git 仓库的代码托管平台是 Codeup、Coding 、Gitee 时，请将 is_clone_bare 设置为 true
      # ！！！在此感谢由 阿里云 && Codeup 的工作人员给出的解决方案！！！
      is_clone_bare: true

      # is_push_force 为 boolean 类型的可选参数（可不设置），不设置时默认为：false
      # 该参数决定是否使用 force 的方式，向目标 Git 仓库推送镜像
      # ！！！强制推送具有高风险性，会强制覆盖目标 Git 仓库的原数据！！！
      is_push_force: true